how did viewing a difference between two versions help you spot the bug?

Its useful to know cmd prompt shortcuts
to be able to compare to very very large files
and be able to see what changes were done and
easily see any typos as well in a short amount of time


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

If I didnt like any changes made in the current version I can easily revert to previous ones. Less time is spent debugging


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pro- you save it when you want to
at the most optimum time, less clutter.

Con- There are too many versions saved and its hard to look through
Every 30 days google docs deletes past versions


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

They didnt think a commit system was nessesary for the majority of their users


How can you use the commands git log and git diff to view the history of files?

git log is used after you clone the entire repository.
using git clone then url of said clone. git log shows entire history 
of commits. git diff is used to compare two commits.
You do this by doing git diff then ID's of the commits you want to
compare separated by space


How might using version control make you more confident to make changes that could break something?

I wont be scared to try more creative or riskier things If I knew there was always a failsafe I could rely on

Now that you have your workspace set up, what do you want to try using Git for?
JavaScript and Html development
